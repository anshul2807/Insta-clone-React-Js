[{"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\App.js":"1","C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\Posts\\Posts.js":"2","C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\reportWebVitals.js":"3","C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\index.js":"4","C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\firebase.js":"5","C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\ImageUpload.js":"6","C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\Toogle.js":"7"},{"size":6912,"mtime":1611317325605,"results":"8","hashOfConfig":"9"},{"size":2567,"mtime":1611321562114,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611209338324,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1611209338324,"results":"12","hashOfConfig":"9"},{"size":605,"mtime":1611227557377,"results":"13","hashOfConfig":"9"},{"size":2554,"mtime":1611306271086,"results":"14","hashOfConfig":"9"},{"size":1729,"mtime":1611321360325,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"13jdpyd",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\App.js",["36","37","38"],"import './App.css';\nimport Posts from './Posts/Posts';\nimport React,{useEffect, useState} from 'react';\nimport { db,auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {Avatar, Button,Input} from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport Toogle from './Toogle';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n\n  const [posts,setposts] = useState([]);\n  const [open,setopen] = useState(false);\n  const [opensignin,setopensignin] = useState(false);\n  const [openupload,setopenupload] = useState(false);\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n  const [email,setemail] = useState('');\n  const [username,setusername] = useState('');\n  const [password,setpassword] = useState('');\n  const [user,setuser] = useState(null);\n\n  useEffect(()=>{\n    db.collection('posts').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n      setposts(snapshot.docs.map(doc=>({id:doc.id,post:doc.data()})))})\n    },[]);\n\n  useEffect(()=>{\n    const unsubscribe = auth.onAuthStateChanged((authuser)=>{\n      if(authuser)\n      {\n        // user logg-in\n        console.log(authuser);\n        setuser(authuser);\n        \n      }\n      else\n      {\n        // user logged-out\n        setuser(null);\n      }\n    })\n    return () => {unsubscribe();}\n  },[user,username]); \n\n    const signup =event =>{\n      event.preventDefault();\n\n      auth.createUserWithEmailAndPassword(email,password)\n      .then((authuser)=>{\n        return authuser.user.updateProfile({\n          displayName:username\n        });\n      })\n      .catch((error) =>alert(error.message));\n\n      setopen(false);\n    }\n\n    const signIn = event =>{\n      event.preventDefault();\n      auth.signInWithEmailAndPassword(email,password)\n      .catch((error)=>alert(error.message))\n      setopensignin(false);\n    }\n\n    \n\n  return (\n\n    <div className=\"App\">\n      \n      \n     <div className=\"App__navbar\">\n       <div className=\"logo-insta\">\n       <img className=\"navbar__img\" src=\"https://logo-logos.com/wp-content/uploads/2016/10/Instagram_logo_wordmark_logotype.png\"/>\n     \n       </div>\n    \n     \n     {user ?(\n       <div className=\"app__logoutcontainer\">\n         \n         <Button variant=\"contained\" color=\"primary\" style={{marginLeft:\"200px\"}} type=\"button\" onClick={()=>auth.signOut()} >\n            Logout\n          </Button>\n          <Avatar className=\"posts__Avatar\">{user.displayName.slice(0,1)}</Avatar>\n         <Toogle username={user.displayName} />\n         </div>\n        \n      ):\n      (\n        <div className=\"app__logincontainer\">\n          <div className=\"app__logincontainer_signin\">\n          <Button variant=\"contained\" color=\"primary\" style={{marginLeft:\"200px\"}} type=\"button\" onClick={()=>setopensignin(true)} >\n          Sign In\n         </Button>\n        </div>\n        <div className=\"app__logincontainer_signup\">\n        <Button variant=\"contained\" color=\"primary\" style={{marginLeft:\"200px\"}} type=\"button\" onClick={()=>setopen(true)} >\n        Sign Up\n        </Button>\n        </div>\n       \n        </div>\n        \n      )}\n     \n     \n      </div>\n     \n    \n      {/* Modal - start for signUp */}\n      <Modal\n        open={open}\n        onClose={()=>{setopen(false)}}\n        \n      >\n        {\n            <div style={modalStyle} className={classes.paper}>\n              <form className=\"App__signup\">\n                <center>\n                    <img className=\"navbar__img\"\n                    src=\"https://logo-logos.com/wp-content/uploads/2016/10/Instagram_logo_wordmark_logotype.png\"/>\n                </center>\n                    <Input\n                    type=\"email\"\n                    placeholder=\"email\"\n                    onChange={(e)=>setemail(e.target.value)}\n                    />\n                    <Input\n                    type=\"text\"\n                    placeholder=\"username\"\n                    onChange={(e)=>setusername(e.target.value)}\n                    />\n                    <Input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    onChange={(e)=>setpassword(e.target.value)}\n                    />\n                    <Button type=\"submit\" onClick={signup} >Submit</Button>\n                \n              </form>\n            </div>\n        }\n      </Modal>\n      \n{/* Modal - start for signIn */}\n      <Modal\n        open={opensignin}\n        onClose={()=>{setopensignin(false)}}\n        \n      >\n        {\n            <div style={modalStyle} className={classes.paper}>\n              <form className=\"App__signup\">\n                <center>\n                    <img className=\"navbar__img\"\n                    src=\"https://logo-logos.com/wp-content/uploads/2016/10/Instagram_logo_wordmark_logotype.png\"/>\n                </center>\n                    <Input\n                    type=\"email\"\n                    placeholder=\"email\"\n                    onChange={(e)=>setemail(e.target.value)}\n                    />\n                    <Input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    onChange={(e)=>setpassword(e.target.value)}\n                    />\n                    <Button type=\"submit\" onClick={signIn} >Submit</Button>\n                \n              </form>\n            </div>\n        }\n      </Modal>\n      {/* Modal - start for Uploading */}\n\n      <Modal\n        open={openupload}\n        onClose={()=>{setopenupload(false)}}\n        \n      >\n        {\n            <div style={modalStyle} className={classes.paper}>\n               {/* upload section */}\n       { ( user?.displayName?(\n        <ImageUpload username={user.displayName}/>\n        \n      ):\n      (\n        <center><h3>Sorry ,Logged In first</h3></center>\n      )\n        \n      )}\n            </div>\n        }\n      </Modal>\n\n      {/* Modal - end */}\n     \n      <div className=\"App__posts\">\n\n        {posts.map(({id,post}) => {\n          return <Posts key={id} postid={id} user={user} usernames={post.username} img_link={post.img_link} captains={post.captains} />\n           })}\n        \n        \n      </div>\n      <div className=\"uploadsection\">\n        <center>\n        <Button variant=\"contained\" color=\"secondary\" onClick={()=>setopenupload(true)}>\n          Upload Your Post\n        </Button>\n         \n        </center>\n\n      \n        \n       \n        \n      \n \n           \n      </div>     \n     \n    </div>\n  );\n}\n\nexport default App;\n",["39","40"],"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\Posts\\Posts.js",["41","42"],"import react,{useState,useEffect} from 'react';\r\nimport'./Posts.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {db} from '../firebase';\r\nimport firebase from 'firebase';\r\nimport Toogle from'../Toogle';\r\n\r\nconst Posts = function({user,postid,usernames,img_link,captains})\r\n{\r\n    const [comments,setcomments]=useState([]);\r\n    const [comment,setcomment]=useState('');\r\n    useEffect(()=>{\r\n        let unsubscribe;\r\n        if(postid)\r\n        {\r\n            unsubscribe = db.collection('posts').doc(postid).collection('comments').orderBy(\"timestamp\",\"desc\").onSnapshot((snapshot)=>{\r\n                setcomments(snapshot.docs.map(doc=>doc.data()))\r\n            });\r\n        \r\n        }\r\n        return ()=>{unsubscribe();};\r\n    },[postid]);\r\n\r\n    const submitcomment = event =>{\r\n        event.preventDefault();\r\n        db.collection(\"posts\").doc(postid).collection(\"comments\").add({\r\n            text:comment,\r\n            username:user.displayName,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setcomment('');\r\n    }\r\n    \r\n    return(\r\n        <div className=\"posts\">\r\n            <div className=\"posts_username\">\r\n                <Avatar className=\"posts__Avatar\">{usernames.slice(0,1)}</Avatar>\r\n                <p className=\"posts__username\"><strong>{usernames}</strong></p>\r\n                {(user && user.displayName===usernames)?(<Toogle postid={postid} username=\"Delete\"/>):(console.log('a'))}\r\n            </div>\r\n            <div className=\"posts__img\">\r\n                <img className=\"posts__img_img\" src={img_link}/>\r\n            </div>\r\n            <div className=\"posts_caption\">\r\n            <p><strong>{usernames}</strong> {captains}</p>\r\n            <h3 style={{color:\"lightgray\"}}>Comment Section</h3>\r\n            <div className=\"postsComments\">\r\n                {comments.map(comment=>\r\n                    (\r\n                        <p><strong>{comment.username} : </strong>{comment.text}</p>\r\n                    ))}\r\n            </div>\r\n            {user?(\r\n            <form className=\"post__box\">\r\n            <input className=\"post__input\" type=\"text\" value={comment} onChange={(e)=>setcomment(e.target.value)} placeholder=\"Enter the comments\" />\r\n            <button className=\"post__button\" disabled={!comment} type=\"submit\" onClick={submitcomment}>Add comment</button>\r\n            </form>\r\n                \r\n            ):(console.log(user))\r\n            }\r\n            \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default Posts;",["43","44"],"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\reportWebVitals.js",[],"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\index.js",[],"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\firebase.js",[],"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\ImageUpload.js",["45"],"import React,{useState} from 'react'\r\nimport {db,storage} from'./firebase';\r\nimport {Button} from '@material-ui/core';\r\nimport firebase from \"firebase\";\r\nimport './ImageUpload.css';\r\nfunction ImageUpload({username}) {\r\n    \r\n    const [progress,setprogress]=useState(0);\r\n    const [image,setimage]=useState(null);\r\n    const [captain,setcaptain]=useState('');\r\n\r\n    const handlechange =(e)=>{\r\n        if(e.target.files[0])\r\n        {\r\n            setimage(e.target.files[0]);\r\n        }\r\n    };\r\n    const handleupload =()=>\r\n    {\r\n        const uploadtask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n        uploadtask.on(\r\n            \"state_changed\",\r\n            (snapshot)=>{\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred/snapshot.totalBytes)*100\r\n                );\r\n                setprogress(progress);\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            ()=>{\r\n                storage\r\n                    .ref(\"images\")\r\n                    .child(image.name)\r\n                    .getDownloadURL()\r\n                    .then(url=>\r\n                        {\r\n                            db.collection('posts').add({\r\n                                timestamp : firebase.firestore.FieldValue.serverTimestamp(),\r\n                                captains: captain,\r\n                                img_link : url,\r\n                                username:username\r\n                            });\r\n                            setprogress(0);\r\n                            setimage(null);\r\n                            setimage(\"\");\r\n                    })\r\n            }\r\n\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"uploading\">\r\n\r\n             {/* // captains\r\n            // file uploader\r\n            // submit button */}\r\n            \r\n            <center>\r\n            <img className=\"uploading__img\" src=\"https://logo-logos.com/wp-content/uploads/2016/10/Instagram_logo_wordmark_logotype.png\"/>\r\n            </center>\r\n            <progress  value={progress} max=\"100\" />\r\n            <input type=\"text\" placeholder=\"Enter the Captain..\" onChange={event=>setcaptain(event.target.value)} value={captain}/>\r\n            <input type=\"file\" onChange={handlechange} />\r\n            <Button  onClick={handleupload}>\r\n                Post\r\n            </Button>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;\r\n",["46","47"],"C:\\Users\\anshu\\Desktop\\React-test-project\\insta-clone\\src\\Toogle.js",[],{"ruleId":"48","severity":1,"message":"49","line":100,"column":8,"nodeType":"50","endLine":100,"endColumn":131},{"ruleId":"48","severity":1,"message":"49","line":147,"column":21,"nodeType":"50","endLine":148,"endColumn":115},{"ruleId":"48","severity":1,"message":"49","line":182,"column":21,"nodeType":"50","endLine":183,"endColumn":115},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":42,"column":17,"nodeType":"50","endLine":42,"endColumn":65},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","replacedBy":"60"},{"ruleId":"48","severity":1,"message":"49","line":64,"column":13,"nodeType":"50","endLine":64,"endColumn":139},{"ruleId":"51","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar",["63"],["64"],["63"],["64"],"no-global-assign","no-unsafe-negation"]